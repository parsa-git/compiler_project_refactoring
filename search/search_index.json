{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Compiler projects By: Saeed Parsa Welcome to Compiler Course Introdcution Facatory refactoring","title":"Home"},{"location":"#compiler-projects","text":"By: Saeed Parsa Welcome to Compiler Course","title":"Compiler projects"},{"location":"#introdcution","text":"","title":"Introdcution"},{"location":"#facatory-refactoring","text":"","title":"Facatory refactoring"},{"location":"factory/","text":"Factory design pattern This class refactors a given class based on the Factory pattern using ANTLR enterClassDeclaration ( self , ctx ) To update site: mkdocs gh-deploy Accepts the class name and returns the position of the class to be refactored Source code in factory\\factory.py def enterClassDeclaration ( self , ctx : JavaParserLabeled . ClassDeclarationContext ): \"\"\" To update site: mkdocs gh-deploy Accepts the class name and returns the position of the class to be refactored \"\"\" if ctx . IDENTIFIER () . getText () == self . creator_identifier : self . inCreator = True self . CretorStartIndex = ctx . classBody () . start . tokenIndex self . currentClass = ctx . IDENTIFIER () . symbol . text elif ctx . IDENTIFIER () . getText () in self . products_identifier : self . inProducts = True self . productsClassIndex . append ( ctx . IDENTIFIER () . symbol . tokenIndex ) self . currentClass = ctx . IDENTIFIER () . symbol . text","title":"Factory Pattern"},{"location":"factory/#factory-design-pattern","text":"This class refactors a given class based on the Factory pattern using ANTLR","title":"Factory design pattern"},{"location":"factory/#Refactoring.Factory.Factory.FactoryMethodRefactoringListener.enterClassDeclaration","text":"To update site: mkdocs gh-deploy Accepts the class name and returns the position of the class to be refactored Source code in factory\\factory.py def enterClassDeclaration ( self , ctx : JavaParserLabeled . ClassDeclarationContext ): \"\"\" To update site: mkdocs gh-deploy Accepts the class name and returns the position of the class to be refactored \"\"\" if ctx . IDENTIFIER () . getText () == self . creator_identifier : self . inCreator = True self . CretorStartIndex = ctx . classBody () . start . tokenIndex self . currentClass = ctx . IDENTIFIER () . symbol . text elif ctx . IDENTIFIER () . getText () in self . products_identifier : self . inProducts = True self . productsClassIndex . append ( ctx . IDENTIFIER () . symbol . tokenIndex ) self . currentClass = ctx . IDENTIFIER () . symbol . text","title":"enterClassDeclaration()"}]}